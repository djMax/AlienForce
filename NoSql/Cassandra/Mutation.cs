/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace AlienForce.NoSql.Cassandra
{

  [Serializable]
  public partial class Mutation : TBase
  {
    private ColumnOrSuperColumn column_or_supercolumn;
    private Deletion deletion;

    public ColumnOrSuperColumn Column_or_supercolumn
    {
      get
      {
        return column_or_supercolumn;
      }
      set
      {
        __isset.column_or_supercolumn = true;
        this.column_or_supercolumn = value;
      }
    }

    public Deletion Deletion
    {
      get
      {
        return deletion;
      }
      set
      {
        __isset.deletion = true;
        this.deletion = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool column_or_supercolumn;
      public bool deletion;
    }

    public Mutation() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              this.column_or_supercolumn = new ColumnOrSuperColumn();
              this.column_or_supercolumn.Read(iprot);
              this.__isset.column_or_supercolumn = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              this.deletion = new Deletion();
              this.deletion.Read(iprot);
              this.__isset.deletion = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Mutation");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (this.column_or_supercolumn != null && __isset.column_or_supercolumn) {
        field.Name = "column_or_supercolumn";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        this.column_or_supercolumn.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (this.deletion != null && __isset.deletion) {
        field.Name = "deletion";
        field.Type = TType.Struct;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        this.deletion.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("Mutation(");
      sb.Append("column_or_supercolumn: ");
      sb.Append(this.column_or_supercolumn== null ? "<null>" : this.column_or_supercolumn.ToString());
      sb.Append(",deletion: ");
      sb.Append(this.deletion== null ? "<null>" : this.deletion.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
