/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace AlienForce.NoSql.Cassandra
{

  [Serializable]
  public partial class AuthenticationRequest : TBase
  {
    private Dictionary<string, string> credentials;

    public Dictionary<string, string> Credentials
    {
      get
      {
        return credentials;
      }
      set
      {
        __isset.credentials = true;
        this.credentials = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool credentials;
    }

    public AuthenticationRequest() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Map) {
              {
                this.credentials = new Dictionary<string, string>();
                TMap _map20 = iprot.ReadMapBegin();
                for( int _i21 = 0; _i21 < _map20.Count; ++_i21)
                {
                  string _key22;
                  string _val23;
                  _key22 = iprot.ReadString();
                  _val23 = iprot.ReadString();
                  this.credentials[_key22] = _val23;
                }
                iprot.ReadMapEnd();
              }
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("AuthenticationRequest");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (this.credentials != null && __isset.credentials) {
        field.Name = "credentials";
        field.Type = TType.Map;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteMapBegin(new TMap(TType.String, TType.String, this.credentials.Count));
          foreach (string _iter24 in this.credentials.Keys)
          {
            oprot.WriteString(_iter24);
            oprot.WriteString(this.credentials[_iter24]);
            oprot.WriteMapEnd();
          }
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("AuthenticationRequest(");
      sb.Append("credentials: ");
      sb.Append(this.credentials);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
