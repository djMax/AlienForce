/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace AlienForce.NoSql.Cassandra
{

  [Serializable]
  public partial class Deletion : TBase
  {
    private long timestamp;
    private byte[] super_column;
    private SlicePredicate predicate;

    public long Timestamp
    {
      get
      {
        return timestamp;
      }
      set
      {
        __isset.timestamp = true;
        this.timestamp = value;
      }
    }

    public byte[] Super_column
    {
      get
      {
        return super_column;
      }
      set
      {
        __isset.super_column = true;
        this.super_column = value;
      }
    }

    public SlicePredicate Predicate
    {
      get
      {
        return predicate;
      }
      set
      {
        __isset.predicate = true;
        this.predicate = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool timestamp;
      public bool super_column;
      public bool predicate;
    }

    public Deletion() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              this.timestamp = iprot.ReadI64();
              this.__isset.timestamp = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              this.super_column = iprot.ReadBinary();
              this.__isset.super_column = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              this.predicate = new SlicePredicate();
              this.predicate.Read(iprot);
              this.__isset.predicate = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Deletion");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.timestamp) {
        field.Name = "timestamp";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(this.timestamp);
        oprot.WriteFieldEnd();
      }
      if (this.super_column != null && __isset.super_column) {
        field.Name = "super_column";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(this.super_column);
        oprot.WriteFieldEnd();
      }
      if (this.predicate != null && __isset.predicate) {
        field.Name = "predicate";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        this.predicate.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("Deletion(");
      sb.Append("timestamp: ");
      sb.Append(this.timestamp);
      sb.Append(",super_column: ");
      sb.Append(this.super_column);
      sb.Append(",predicate: ");
      sb.Append(this.predicate== null ? "<null>" : this.predicate.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
